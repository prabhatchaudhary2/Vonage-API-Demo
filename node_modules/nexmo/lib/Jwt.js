'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _jsonwebtoken = require('jsonwebtoken');

var _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Jwt = function () {
	function Jwt() {
		_classCallCheck(this, Jwt);
	}

	_createClass(Jwt, [{
		key: 'generate',

		/**
   * Generate a JSON Web Token (JWT) for the application with the given
   * `applicationId`.
   *
   * @returns {String} the generated token
   */
		value: function generate(cert, applicationId) {
			var issuedAt = arguments.length <= 2 || arguments[2] === undefined ? Date.now() : arguments[2];
			var jwtIdClaim = arguments.length <= 3 || arguments[3] === undefined ? _uuid2.default.v1() : arguments[3];

			if (!cert instanceof Buffer) {
				throw new Error('cert must be of type Buffer');
			}

			var toSign = {
				'iat': issuedAt,
				'application_id': applicationId,
				'jti': jwtIdClaim
			};

			var token = _jsonwebtoken2.default.sign(toSign, cert, { algorithm: 'RS256' });
			return token;
		}
	}]);

	return Jwt;
}();

module.exports = Jwt;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Kd3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0FBQ0E7Ozs7Ozs7O0lBRU0sRzs7Ozs7Ozs7Ozs7Ozs7MkJBT0ksSSxFQUFNLGEsRUFBOEQ7QUFBQSxPQUEvQyxRQUErQyx5REFBcEMsS0FBSyxHQUFMLEVBQW9DO0FBQUEsT0FBeEIsVUFBd0IseURBQVgsZUFBSyxFQUFMLEVBQVc7O0FBQzVFLE9BQUcsQ0FBQyxJQUFELFlBQWlCLE1BQXBCLEVBQTRCO0FBQzNCLFVBQU0sSUFBSSxLQUFKLENBQVUsNkJBQVYsQ0FBTjtBQUNBOztBQUVELE9BQUksU0FBUztBQUNaLFdBQU8sUUFESztBQUVaLHNCQUFrQixhQUZOO0FBR1osV0FBTztBQUhLLElBQWI7O0FBTUEsT0FBSSxRQUFRLHVCQUFJLElBQUosQ0FBUyxNQUFULEVBQWlCLElBQWpCLEVBQXVCLEVBQUMsV0FBVyxPQUFaLEVBQXZCLENBQVo7QUFDQSxVQUFPLEtBQVA7QUFDQTs7Ozs7O0FBR0YsT0FBTyxPQUFQLEdBQWlCLEdBQWpCIiwiZmlsZSI6Ikp3dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1dWlkIGZyb20gJ3V1aWQnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuXG5jbGFzcyBKd3Qge1xuXHQvKipcblx0ICogR2VuZXJhdGUgYSBKU09OIFdlYiBUb2tlbiAoSldUKSBmb3IgdGhlIGFwcGxpY2F0aW9uIHdpdGggdGhlIGdpdmVuXG5cdCAqIGBhcHBsaWNhdGlvbklkYC5cblx0ICpcblx0ICogQHJldHVybnMge1N0cmluZ30gdGhlIGdlbmVyYXRlZCB0b2tlblxuXHQgKi9cblx0Z2VuZXJhdGUoY2VydCwgYXBwbGljYXRpb25JZCwgaXNzdWVkQXQgPSBEYXRlLm5vdygpLCBqd3RJZENsYWltID0gdXVpZC52MSgpKSB7XG5cdFx0aWYoIWNlcnQgaW5zdGFuY2VvZiBCdWZmZXIpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignY2VydCBtdXN0IGJlIG9mIHR5cGUgQnVmZmVyJyk7XG5cdFx0fVxuXHRcdFxuXHRcdHZhciB0b1NpZ24gPSB7XG5cdFx0XHQnaWF0JzogaXNzdWVkQXQsXG5cdFx0XHQnYXBwbGljYXRpb25faWQnOiBhcHBsaWNhdGlvbklkLFxuXHRcdFx0J2p0aSc6IGp3dElkQ2xhaW1cblx0XHR9O1xuXHRcdFxuXHRcdHZhciB0b2tlbiA9IGp3dC5zaWduKHRvU2lnbiwgY2VydCwge2FsZ29yaXRobTogJ1JTMjU2J30pO1xuXHRcdHJldHVybiB0b2tlbjtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEp3dDtcbiJdfQ==