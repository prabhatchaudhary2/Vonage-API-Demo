"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Message = function () {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition SMS options.
   */

  function Message(credentials) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Message);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }

  /**
   * TODO: document
   */


  _createClass(Message, [{
    key: "sendSms",
    value: function sendSms() {
      this._nexmo.sendTextMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendBinaryMessage",
    value: function sendBinaryMessage() {
      this._nexmo.sendBinaryMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendWapPushMessage",
    value: function sendWapPushMessage() {
      this._nexmo.sendWapPushMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcodeAlert",
    value: function shortcodeAlert() {
      this._nexmo.shortcodeAlert.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcode2FA",
    value: function shortcode2FA() {
      this._nexmo.shortcode2FA.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcodeMarketing",
    value: function shortcodeMarketing() {
      this._nexmo.shortcodeMarketing.apply(this._nexmo, arguments);
    }
  }]);

  return Message;
}();

exports.default = Message;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NZXNzYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUVBOzs7Ozs7OztJQUVNLE87Ozs7Ozs7O0FBT0osbUJBQVksV0FBWixFQUF1QztBQUFBLFFBQWQsT0FBYyx1RUFBSixFQUFJOztBQUFBOztBQUNyQyxTQUFLLEtBQUwsR0FBYSxXQUFiO0FBQ0EsU0FBSyxPQUFMLEdBQWUsT0FBZjs7O0FBR0EsU0FBSyxNQUFMLEdBQWMsS0FBSyxPQUFMLENBQWEsYUFBYixtQkFBZDs7QUFFQSxTQUFLLE1BQUwsQ0FBWSxVQUFaLENBQXVCLEtBQUssS0FBTCxDQUFXLE1BQWxDLEVBQTBDLEtBQUssS0FBTCxDQUFXLFNBQXJELEVBQWdFLEtBQUssT0FBckU7QUFDRDs7Ozs7Ozs7OzhCQUtTO0FBQ1IsV0FBSyxNQUFMLENBQVksZUFBWixDQUE0QixLQUE1QixDQUFrQyxLQUFLLE1BQXZDLEVBQStDLFNBQS9DO0FBQ0Q7Ozs7Ozs7O3dDQUttQjtBQUNsQixXQUFLLE1BQUwsQ0FBWSxpQkFBWixDQUE4QixLQUE5QixDQUFvQyxLQUFLLE1BQXpDLEVBQWlELFNBQWpEO0FBQ0Q7Ozs7Ozs7O3lDQUtvQjtBQUNuQixXQUFLLE1BQUwsQ0FBWSxrQkFBWixDQUErQixLQUEvQixDQUFxQyxLQUFLLE1BQTFDLEVBQWtELFNBQWxEO0FBQ0Q7Ozs7Ozs7O3FDQUtnQjtBQUNmLFdBQUssTUFBTCxDQUFZLGNBQVosQ0FBMkIsS0FBM0IsQ0FBaUMsS0FBSyxNQUF0QyxFQUE4QyxTQUE5QztBQUNEOzs7Ozs7OzttQ0FLYztBQUNiLFdBQUssTUFBTCxDQUFZLFlBQVosQ0FBeUIsS0FBekIsQ0FBK0IsS0FBSyxNQUFwQyxFQUE0QyxTQUE1QztBQUNEOzs7Ozs7Ozt5Q0FLb0I7QUFDbkIsV0FBSyxNQUFMLENBQVksa0JBQVosQ0FBK0IsS0FBL0IsQ0FBcUMsS0FBSyxNQUExQyxFQUFrRCxTQUFsRDtBQUNEOzs7Ozs7a0JBSVksTyIsImZpbGUiOiJNZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBuZXhtbyBmcm9tICcuL2luZGV4JztcblxuY2xhc3MgTWVzc2FnZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0NyZWRlbnRpYWxzfSBjcmVkZW50aWFsc1xuICAgKiAgICBjcmVkZW50aWFscyB0byBiZSB1c2VkIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgQVBJLlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiAgICBBZGRpdGlvbiBTTVMgb3B0aW9ucy5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNyZWRlbnRpYWxzLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmNyZWRzID0gY3JlZGVudGlhbHM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBcbiAgICAvLyBVc2VkIHRvIGZhY2lsaXRhdGUgdGVzdGluZyBvZiB0aGUgY2FsbCB0byB0aGUgdW5kZXJseWluZyBvYmplY3RcbiAgICB0aGlzLl9uZXhtbyA9IHRoaXMub3B0aW9ucy5uZXhtb092ZXJyaWRlIHx8IG5leG1vO1xuICAgIFxuICAgIHRoaXMuX25leG1vLmluaXRpYWxpemUodGhpcy5jcmVkcy5hcGlLZXksIHRoaXMuY3JlZHMuYXBpU2VjcmV0LCB0aGlzLm9wdGlvbnMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlbmRTbXMoKSB7XG4gICAgdGhpcy5fbmV4bW8uc2VuZFRleHRNZXNzYWdlLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlbmRCaW5hcnlNZXNzYWdlKCkge1xuICAgIHRoaXMuX25leG1vLnNlbmRCaW5hcnlNZXNzYWdlLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlbmRXYXBQdXNoTWVzc2FnZSgpIHtcbiAgICB0aGlzLl9uZXhtby5zZW5kV2FwUHVzaE1lc3NhZ2UuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2hvcnRjb2RlQWxlcnQoKSB7XG4gICAgdGhpcy5fbmV4bW8uc2hvcnRjb2RlQWxlcnQuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2hvcnRjb2RlMkZBKCkge1xuICAgIHRoaXMuX25leG1vLnNob3J0Y29kZTJGQS5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBzaG9ydGNvZGVNYXJrZXRpbmcoKSB7XG4gICAgdGhpcy5fbmV4bW8uc2hvcnRjb2RlTWFya2V0aW5nLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxufVxuXG5leHBvcnQgZGVmYXVsdCBNZXNzYWdlO1xuIl19