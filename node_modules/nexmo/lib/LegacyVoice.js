"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LegacyVoice = function () {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition Voice options.
   */

  function LegacyVoice(credentials) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, LegacyVoice);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }

  /**
   * TODO: document
   */


  _createClass(LegacyVoice, [{
    key: "sendTTSMessage",
    value: function sendTTSMessage() {
      this._nexmo.sendTTSMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendTTSPromptWithCapture",
    value: function sendTTSPromptWithCapture() {
      this._nexmo.sendTTSPromptWithCapture.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendTTSPromptWithConfirm",
    value: function sendTTSPromptWithConfirm() {
      this._nexmo.sendTTSPromptWithConfirm.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "call",
    value: function call() {
      this._nexmo.call.apply(this._nexmo, arguments);
    }
  }]);

  return LegacyVoice;
}();

exports.default = LegacyVoice;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9MZWdhY3lWb2ljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQTs7Ozs7Ozs7SUFFTSxXOzs7Ozs7OztBQU9KLHVCQUFZLFdBQVosRUFBdUM7QUFBQSxRQUFkLE9BQWMseURBQUosRUFBSTs7QUFBQTs7QUFDckMsU0FBSyxLQUFMLEdBQWEsV0FBYjtBQUNBLFNBQUssT0FBTCxHQUFlLE9BQWY7OztBQUdBLFNBQUssTUFBTCxHQUFjLEtBQUssT0FBTCxDQUFhLGFBQWIsbUJBQWQ7O0FBRUEsU0FBSyxNQUFMLENBQVksVUFBWixDQUF1QixLQUFLLEtBQUwsQ0FBVyxNQUFsQyxFQUEwQyxLQUFLLEtBQUwsQ0FBVyxTQUFyRCxFQUFnRSxLQUFLLE9BQXJFO0FBQ0Q7Ozs7Ozs7OztxQ0FLZ0I7QUFDZixXQUFLLE1BQUwsQ0FBWSxjQUFaLENBQTJCLEtBQTNCLENBQWlDLEtBQUssTUFBdEMsRUFBOEMsU0FBOUM7QUFDRDs7Ozs7Ozs7K0NBSzBCO0FBQ3pCLFdBQUssTUFBTCxDQUFZLHdCQUFaLENBQXFDLEtBQXJDLENBQTJDLEtBQUssTUFBaEQsRUFBd0QsU0FBeEQ7QUFDRDs7Ozs7Ozs7K0NBSzBCO0FBQ3pCLFdBQUssTUFBTCxDQUFZLHdCQUFaLENBQXFDLEtBQXJDLENBQTJDLEtBQUssTUFBaEQsRUFBd0QsU0FBeEQ7QUFDRDs7Ozs7Ozs7MkJBS007QUFDTCxXQUFLLE1BQUwsQ0FBWSxJQUFaLENBQWlCLEtBQWpCLENBQXVCLEtBQUssTUFBNUIsRUFBb0MsU0FBcEM7QUFDRDs7Ozs7O2tCQUlZLFciLCJmaWxlIjoiTGVnYWN5Vm9pY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IG5leG1vIGZyb20gJy4vaW5kZXgnO1xuXG5jbGFzcyBMZWdhY3lWb2ljZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0NyZWRlbnRpYWxzfSBjcmVkZW50aWFsc1xuICAgKiAgICBjcmVkZW50aWFscyB0byBiZSB1c2VkIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgQVBJLlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiAgICBBZGRpdGlvbiBWb2ljZSBvcHRpb25zLlxuICAgKi9cbiAgY29uc3RydWN0b3IoY3JlZGVudGlhbHMsIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuY3JlZHMgPSBjcmVkZW50aWFscztcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIFxuICAgIC8vIFVzZWQgdG8gZmFjaWxpdGF0ZSB0ZXN0aW5nIG9mIHRoZSBjYWxsIHRvIHRoZSB1bmRlcmx5aW5nIG9iamVjdFxuICAgIHRoaXMuX25leG1vID0gdGhpcy5vcHRpb25zLm5leG1vT3ZlcnJpZGUgfHwgbmV4bW87XG4gICAgXG4gICAgdGhpcy5fbmV4bW8uaW5pdGlhbGl6ZSh0aGlzLmNyZWRzLmFwaUtleSwgdGhpcy5jcmVkcy5hcGlTZWNyZXQsIHRoaXMub3B0aW9ucyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2VuZFRUU01lc3NhZ2UoKSB7XG4gICAgdGhpcy5fbmV4bW8uc2VuZFRUU01lc3NhZ2UuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2VuZFRUU1Byb21wdFdpdGhDYXB0dXJlKCkge1xuICAgIHRoaXMuX25leG1vLnNlbmRUVFNQcm9tcHRXaXRoQ2FwdHVyZS5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBzZW5kVFRTUHJvbXB0V2l0aENvbmZpcm0oKSB7XG4gICAgdGhpcy5fbmV4bW8uc2VuZFRUU1Byb21wdFdpdGhDb25maXJtLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIGNhbGwoKSB7XG4gICAgdGhpcy5fbmV4bW8uY2FsbC5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICAgIFxufVxuXG5leHBvcnQgZGVmYXVsdCBMZWdhY3lWb2ljZTtcbiJdfQ==